// <auto-generated />
using BackRowStore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackRowStore.Migrations
{
    [DbContext(typeof(BackRowDbContext))]
    [Migration("20231205164859_AddSerialToCartTest")]
    partial class AddSerialToCartTest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("BackRowStore.Cart", b =>
                {
                    b.Property<string>("cartID")
                        .HasColumnType("text");

                    b.Property<double>("cartBalance")
                        .HasColumnType("double precision");

                    b.HasKey("cartID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("BackRowStore.Item", b =>
                {
                    b.Property<string>("itemID")
                        .HasColumnType("text");

                    b.Property<string>("cartID")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("itemID");

                    b.HasIndex("cartID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("BackRowStore.Item", b =>
                {
                    b.HasOne("BackRowStore.Cart", null)
                        .WithMany("items")
                        .HasForeignKey("cartID");
                });

            modelBuilder.Entity("BackRowStore.Cart", b =>
                {
                    b.Navigation("items");
                });
#pragma warning restore 612, 618
        }
    }
}
